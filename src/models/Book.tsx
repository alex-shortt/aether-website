/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef, useState, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    Book_Side: THREE.Mesh;
    Page007: THREE.Mesh;
    Page008: THREE.Mesh;
    Page01: THREE.Mesh;
    Page02: THREE.Mesh;
    Page03: THREE.Mesh;
    Page04: THREE.Mesh;
    Page05: THREE.Mesh;
    Page06: THREE.Mesh;
    Book_Cover: THREE.SkinnedMesh;
    Bone001: THREE.Bone;
  };
  materials: {
    Book_Side: THREE.MeshStandardMaterial;
    ["Book_Page 03"]: THREE.MeshStandardMaterial;
    ["Book_Page 04"]: THREE.MeshStandardMaterial;
    ["Book_Page 01"]: THREE.MeshStandardMaterial;
    ["Book_Page 02"]: THREE.MeshStandardMaterial;
    Book_cover: THREE.MeshStandardMaterial;
  };
};

type ActionName = "Point002|Take 001|BaseLayer";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/Book-1616816223/book_01.glb.gz";

type Props = { open?: boolean } & JSX.IntrinsicElements["group"];

export default function Model(props: Props) {
  const { open = false, ...restProps } = props;

  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(FILE_URL) as GLTFResult;
  const { actions } = useAnimations(animations, group);

  const SCALE = 0.15;

  useEffect(() => {
    if (open) {
      actions["Point002|Take 001|BaseLayer"].loop = THREE.LoopOnce;
      actions["Point002|Take 001|BaseLayer"].paused = false;
      actions["Point002|Take 001|BaseLayer"].clampWhenFinished = true;
      actions["Point002|Take 001|BaseLayer"].timeScale = 1;
      actions["Point002|Take 001|BaseLayer"].play();
    } else {
      actions["Point002|Take 001|BaseLayer"].loop = THREE.LoopOnce;
      actions["Point002|Take 001|BaseLayer"].paused = false;
      actions["Point002|Take 001|BaseLayer"].clampWhenFinished = true;
      actions["Point002|Take 001|BaseLayer"].timeScale = -1;
      actions["Point002|Take 001|BaseLayer"].play();
    }
  }, [open]);

  return (
    <group ref={group} {...restProps} dispose={null}>
      <group
        name="Scene"
        scale={[SCALE, SCALE, SCALE]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <group
          name="Point002"
          position={[-0.5714, 0.117, -0.001]}
          scale={[0.0254, 0.0254, 0.0254]}
        >
          <primitive object={nodes.Bone001} />
          <mesh
            name="Book_Side"
            material={materials.Book_Side}
            geometry={nodes.Book_Side.geometry}
            position={[0.8137, -3.0564, 0.0386]}
            frustumCulled={false}
          />
          <mesh
            name="Page007"
            material={materials["Book_Page 03"]}
            geometry={nodes.Page007.geometry}
            position={[0.8948, 3.6394, 0.0421]}
            frustumCulled={false}
          />
          <mesh
            name="Page008"
            material={materials["Book_Page 04"]}
            geometry={nodes.Page008.geometry}
            position={[0.8948, 3.6394, 0.0421]}
            frustumCulled={false}
          />
          <mesh
            name="Page01"
            material={materials["Book_Page 01"]}
            geometry={nodes.Page01.geometry}
            position={[0.8948, 3.6394, 0.0421]}
            frustumCulled={false}
          />
          <mesh
            name="Page02"
            material={materials["Book_Page 02"]}
            geometry={nodes.Page02.geometry}
            position={[0.8948, 3.6394, 0.0421]}
            frustumCulled={false}
          />
          <mesh
            name="Page03"
            material={materials["Book_Page 03"]}
            geometry={nodes.Page03.geometry}
            position={[0.8948, 3.6394, 0.0421]}
            frustumCulled={false}
          />
          <mesh
            name="Page04"
            material={materials["Book_Page 04"]}
            geometry={nodes.Page04.geometry}
            position={[0.8948, 3.6394, 0.0421]}
            frustumCulled={false}
          />
          <mesh
            name="Page05"
            material={materials["Book_Page 01"]}
            geometry={nodes.Page05.geometry}
            position={[0.8948, 3.6394, 0.0421]}
            frustumCulled={false}
          />
          <mesh
            name="Page06"
            material={materials["Book_Page 02"]}
            geometry={nodes.Page06.geometry}
            position={[0.8948, 3.6394, 0.0421]}
            frustumCulled={false}
          />
          <skinnedMesh
            name="Book_Cover"
            material={materials.Book_cover}
            geometry={nodes.Book_Cover.geometry}
            skeleton={nodes.Book_Cover.skeleton}
            frustumCulled={false}
            castShadow
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
